[
  {
    "path": "posts/2022-01-07-tidy-tuesday-week-1-2022/",
    "title": "Tidy Tuesday: Week 1 2022",
    "description": "Bring your own data: When are the twins waking up?",
    "author": [
      {
        "name": "Nick Zani",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2022-01-07",
    "categories": [],
    "contents": "\r\nIntroduction\r\nThe theme for Tidy Tuesday week 1 was bring your own data. For a while I have had a feeling that our just-turned-two year old twins have been waking up earlier and earlier, so I decided to use my Apple watch step data to try to prove this.\r\n\r\nData\r\nThe Apple health data can be exported via the health app as an xml file. By filtering on the step count and Apple watch flag we can extract the date and time using str_match. We will assume that if there were steps in the hours between midnight and 5am it was because of (at least one of) the twins waking up.\r\n\r\n\r\nlibrary(dplyr)\r\nlibrary(readr)\r\nlibrary(tibble)\r\nlibrary(stringr)\r\nlibrary(ggplot2)\r\nlibrary(scales)\r\n\r\nsteps <- as_tibble(read_lines(file = \"../../_data/apple_health_extract.xml\")) %>%\r\n  filter(str_detect(value, 'StepCount')) %>%\r\n  filter(str_detect(value, 'Apple Watch')) %>%\r\n  mutate(creation_dt = as.Date(str_match(value, 'creationDate=\\\\\"\\\\\"(\\\\d+-\\\\d+-\\\\d+) \\\\d+:\\\\d+:\\\\d+')[,2]),\r\n         creation_hr = as.numeric(str_match(value, 'creationDate=\\\\\"\\\\\"\\\\d+-\\\\d+-\\\\d+ (\\\\d+):\\\\d+:\\\\d+')[,2])\r\n         )\r\n\r\n\r\n\r\nNow we will filter for the last few months, extract the day of the week and group the wakeup times. Finally we will merge on the counts by month so we can get a percentage, to take account of the fact that different months are different length, and on some occasions my watch was charging.\r\n\r\n\r\naggregated_steps <- steps %>%\r\n  filter(creation_dt >= as.Date(\"2021-04-01\") & creation_dt <= as.Date(\"2021-12-31\")) %>%\r\n  select(-value) %>%\r\n  distinct() %>%\r\n  mutate(weekday_name = strftime(creation_dt,'%a'),\r\n         weekday_num = as.numeric(strftime(creation_dt,'%u')),\r\n         month_name = strftime(creation_dt,'%b'),\r\n         month_num = as.numeric(strftime(creation_dt,'%m'))\r\n         ) %>%\r\n  mutate(grouping = case_when(creation_hr %in% c(0,1) ~ \"0 - 1am\",\r\n                              creation_hr %in% c(2,3) ~ \"2 - 3am\",\r\n                              creation_hr %in% c(4,5) ~ \"4 - 5am\"\r\n                              )\r\n         ) %>%\r\n  filter(!is.na(grouping)) %>%\r\n  group_by(month_name, month_num, grouping) %>%\r\n  summarise(cnt = n()) %>%\r\n  ungroup()\r\n\r\nmonthly_cnts <- aggregated_steps %>%\r\n  group_by(month_name, month_num) %>%\r\n  summarise(mthly_total = sum(cnt))\r\n\r\npercentages <- aggregated_steps %>%\r\n  inner_join(monthly_cnts) %>%\r\n  mutate(percent_wakeups = cnt/mthly_total)\r\n\r\n\r\n\r\nVisualisation\r\nNow we have the data in tidy form we can pass to ggplot to visualise. This confirms my theory that the twins have been waking up earlier and earlier, with a big change in November, where over half the wakeups were before 4am!\r\n\r\n\r\npercentages %>%\r\n  ggplot(aes(x = reorder(month_name, month_num),\r\n             y = percent_wakeups,\r\n             fill = grouping)\r\n         ) +\r\n  geom_col() +\r\n  theme_void() +\r\n  scale_y_continuous(labels = scales::percent) +\r\n  labs(title = \"When Are the Twins Waking Up?\", \r\n       subtitle = \"Percentage of Wakeups by Time, by Month\\n\",\r\n       x = \"\",\r\n       y = \"\",\r\n       fill = \"Wakeup Time\",\r\n       caption = \"\\nNick Zani | @nickzani\") +\r\n  scale_fill_brewer(palette = 3) +\r\n  theme(strip.text = element_text(size = 18),\r\n        axis.title = element_text(size = 14),\r\n        axis.text.x = element_text(size = 14),\r\n        axis.text.y = element_text(size = 18),\r\n        plot.title = element_text(size = 18),\r\n        plot.subtitle = element_text(size = 14),\r\n        plot.caption = element_text(size = 12),\r\n        legend.text = element_text(size = 16),\r\n        legend.title = element_text(size = 18)\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-01-07-tidy-tuesday-week-1-2022/tidy-tuesday-week-1-2022_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-01-12T10:29:44+00:00",
    "input_file": "tidy-tuesday-week-1-2022.knit.md"
  }
]
